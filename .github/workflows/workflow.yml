name: json-api-symfony

on: [push, pull_request]

jobs:
  start-runner:
    uses: undabot/ci/.github/workflows/startEc2.yml@master
    secrets: inherit

  build_image_82:
    needs: start-runner
    runs-on: ${{ needs.start-runner.outputs.label }}
    #runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 1
          set-safe-directory: 'true'
      - run: git init
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build work image
        run: |
          docker build -f ./docker/php82.Dockerfile --build-arg XDEBUG_ENABLED="false"
      - name: Push image to DockerHub
        run: |
          docker push undabot/json-api-symfony:latest

  test_image_82:
    runs-on: ubuntu-latest
    needs: [build_image_82]
    container:
        image: json-api-symfony:latest
    steps:
      - name: Test image
        run: |
          cd /opt/app
          composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
          composer validate --no-check-publish --no-interaction --ansi
          composer run lint
          composer run qc
          phpdbg -qrr ./vendor/bin/phpunit
          cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_81:
      needs: start-runner
      runs-on: ${{ needs.start-runner.outputs.label }}
      #runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
            with:
                fetch-depth: 1
                set-safe-directory: 'true'
          - run: git init
          - name: Login to GitHub Container Registry
            uses: docker/login-action@v1
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
          - name: Build work image
            run: |
                docker build -f ./docker/php81.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:81

  test_image_81:
      runs-on: ubuntu-latest
      needs: [build_image_81]
      container:
          image: json-api-symfony:81
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_83:
      needs: start-runner
      runs-on: ${{ needs.start-runner.outputs.label }}
      #runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
            with:
                fetch-depth: 1
                set-safe-directory: 'true'
          - run: git init
          - name: Login to GitHub Container Registry
            uses: docker/login-action@v1
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
          - name: Build work image
            run: |
                docker build -f ./docker/php83.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:83

  test_image_83:
      runs-on: ubuntu-latest
      needs: [build_image_83]
      container:
          image: json-api-symfony:83
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_80:
      needs: start-runner
      runs-on: ${{ needs.start-runner.outputs.label }}
      #runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v3
            with:
                fetch-depth: 1
                set-safe-directory: 'true'
          - run: git init
          - name: Login to GitHub Container Registry
            uses: docker/login-action@v1
            with:
                registry: ghcr.io
                username: ${{ github.actor }}
                password: ${{ secrets.GITHUB_TOKEN }}
          - name: Build work image
            run: |
                docker build -f ./docker/php80.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:80

  test_image_80:
      runs-on: ubuntu-latest
      needs: [build_image_80]
      container:
          image: json-api-symfony:80
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"
