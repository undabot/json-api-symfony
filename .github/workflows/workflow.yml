name: json-api-symfony

on: [push, pull_request]

jobs:
  build_image_82:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USER }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}
      - name: Build work image
        run: |
          docker build -f ./docker/php82.Dockerfile --build-arg XDEBUG_ENABLED="false"
      - name: Push image to DockerHub
        run: |
          docker push undabot/json-api-symfony:latest

  test_image_82:
    runs-on: ubuntu-latest
    needs: [build_image]
    container:
        image: json-api-symfony:latest
    steps:
      - name: Test image
        run: |
          cd /opt/app
          composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
          composer validate --no-check-publish --no-interaction --ansi
          composer run lint
          composer run qc
          phpdbg -qrr ./vendor/bin/phpunit
          cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_81:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v2
          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Build work image
            run: |
                docker build -f ./docker/php81.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:latest

  test_image_81:
      runs-on: ubuntu-latest
      needs: [build_image]
      container:
          image: json-api-symfony:latest
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_83:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v2
          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Build work image
            run: |
                docker build -f ./docker/php83.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:latest

  test_image_83:
      runs-on: ubuntu-latest
      needs: [build_image]
      container:
          image: json-api-symfony:latest
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"

  build_image_80:
      runs-on: ubuntu-latest
      steps:
          - uses: actions/checkout@v2
          - name: Login to Docker Hub
            uses: docker/login-action@v1
            with:
                username: ${{ secrets.DOCKERHUB_USER }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Build work image
            run: |
                docker build -f ./docker/php80.Dockerfile --build-arg XDEBUG_ENABLED="false"
          - name: Push image to DockerHub
            run: |
                docker push undabot/json-api-symfony:latest

  test_image_8:
      runs-on: ubuntu-latest
      needs: [build_image]
      container:
          image: json-api-symfony:latest
      steps:
          - name: Test image
            run: |
                cd /opt/app
                composer install --no-ansi --no-interaction --no-progress --no-scripts --optimize-autoloader
                composer validate --no-check-publish --no-interaction --ansi
                composer run lint
                composer run qc
                phpdbg -qrr ./vendor/bin/phpunit
                cat tests/_reports/coverage.txt | head -n 10 | grep "Lines"
